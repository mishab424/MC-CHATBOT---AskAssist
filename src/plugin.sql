prompt --application/set_environment
set define off verify off feedback off
whenever sqlerror exit sql.sqlcode rollback
--------------------------------------------------------------------------------
--
-- Oracle APEX export file
--
-- You should run this script using a SQL client connected to the database as
-- the owner (parsing schema) of the application or as a database user with the
-- APEX_ADMINISTRATOR_ROLE role.
--
-- This export file has been automatically generated. Modifying this file is not
-- supported by Oracle and can lead to unexpected application and/or instance
-- behavior now or in the future.
--
-- NOTE: Calls to apex_application_install override the defaults below.
--
--------------------------------------------------------------------------------
begin
wwv_flow_imp.import_begin (
 p_version_yyyy_mm_dd=>'2024.11.30'
,p_release=>'24.2.7'
,p_default_workspace_id=>1000001
,p_default_application_id=>133
,p_default_id_offset=>0
,p_default_owner=>'WKSP_ASSENTADEV'
);
end;
/
 
prompt APPLICATION 133 - SERVICE MANAGEMENT SYSTEM
--
-- Application Export:
--   Application:     133
--   Name:            SERVICE MANAGEMENT SYSTEM
--   Date and Time:   06:57 Monday August 4, 2025
--   Exported By:     MISHAB
--   Flashback:       0
--   Export Type:     Component Export
--   Manifest
--     PLUGIN: 88745420766555672
--   Manifest End
--   Version:         24.2.7
--   Instance ID:     7828741953581541
--

begin
  -- replace components
  wwv_flow_imp.g_mode := 'REPLACE';
end;
/
prompt --application/shared_components/plugins/template_component/mc_chatbot_pro
begin
wwv_flow_imp_shared.create_plugin(
 p_id=>wwv_flow_imp.id(88745420766555672)
,p_plugin_type=>'TEMPLATE COMPONENT'
,p_theme_id=>nvl(wwv_flow_application_install.get_theme_id, '')
,p_name=>'MC_CHATBOT_PRO'
,p_display_name=>'MC CHATBOT PRO'
,p_supported_component_types=>'PARTIAL'
,p_partial_template=>wwv_flow_string.join(wwv_flow_t_varchar2(
'{if APEX$IS_LAZY_LOADING/}',
'  <style>',
'    :root {',
'      --primary-color: #007bff; /* A more common, professional blue */',
'      --secondary-color: #6c757d; /* For subtle elements */',
'      --bot-color: #e9f5ff; /* Lighter blue for bot messages */',
'      --user-color: #d4edda; /* Gentle green for user messages */',
'      --quick-question-bg: #f8f9fa; /* Light background for quick questions */',
'      --quick-question-border: #dee2e6; /* Border for quick questions */',
'      --glass-bg: rgba(255, 255, 255, 0.8); /* Slightly less transparent glass */',
'      --glass-border: 1px solid rgba(200, 200, 200, 0.3); /* Subtle glass border */',
'      --glass-blur: blur(15px); /* Increased blur for more glass effect */',
'      --shadow-light: 0 4px 12px rgba(0, 0, 0, 0.1);',
'      --shadow-medium: 0 8px 25px rgba(0, 0, 0, 0.2);',
'    }',
'',
'    /* body {',
'      margin: 0;',
'      font-family: ''Inter'', ''Segoe UI'', Roboto, Helvetica, Arial, sans-serif; ',
'      background: linear-gradient(to right bottom, #e0f2f7, #f0f8ff); ',
'      min-height: 100vh;',
'      display: flex;',
'      justify-content: center;',
'      align-items: center;',
'    }  */',
'',
'    .chat-btn {',
'      position: fixed;',
'      bottom: 25px;',
'      right: 25px;',
'      background-color: var(--primary-color);',
'      color: white;',
'      border: none;',
'      border-radius: 50%;',
'      width: 65px;',
'      height: 65px;',
'      font-size: 32px; /* Slightly larger icon */',
'      cursor: pointer;',
'      box-shadow: var(--shadow-medium);',
'      transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;',
'      z-index: 1000;',
'      display: flex;',
'      justify-content: center;',
'      align-items: center;',
'    }',
'',
'    .chat-btn:hover {',
'      transform: translateY(-3px); /* Gentle lift */',
'      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25);',
'    }',
'',
'    .chat-window {',
'      position: fixed;',
'      bottom: 100px; /* Adjusted position above button */',
'      right: 25px;',
'      width: 380px; /* Slightly wider */',
'      max-height: 550px; /* Taller */',
'      background: var(--glass-bg);',
'      backdrop-filter: var(--glass-blur);',
'      border-radius: 20px; /* More rounded corners */',
'      box-shadow: var(--shadow-medium);',
'      border: var(--glass-border);',
'      display: none;',
'      flex-direction: column;',
'      overflow: hidden;',
'      z-index: 1000;',
'      animation: slideUpIn 0.3s ease-out forwards; /* Entry animation */',
'    }',
'',
'    .chat-header {',
'      background-color: var(--primary-color);',
'      color: white;',
'      padding: 18px; /* More padding */',
'      text-align: center;',
'      font-weight: 600; /* Bolder */',
'      font-size: 1.1em;',
'      border-top-left-radius: 20px;',
'      border-top-right-radius: 20px;',
'    }',
'',
'    .chat-body {',
'      flex-grow: 1;',
'      padding: 15px; /* More padding */',
'      overflow-y: auto;',
'      display: flex;',
'      flex-direction: column;',
'      gap: 12px; /* More space between messages */',
'      scroll-behavior: smooth; /* Smooth scrolling */',
'    }',
'',
'    .chat-input {',
'      display: flex;',
'      padding: 15px;',
'      border-top: 1px solid #e0e0e0; /* Lighter border */',
'      background-color: rgba(255, 255, 255, 0.9); /* Slight background for input area */',
'    }',
'',
'    .chat-input input {',
'      flex: 1;',
'      padding: 12px 15px; /* More padding */',
'      border-radius: 25px; /* Pill shape */',
'      border: 1px solid #ccc;',
'      font-size: 0.95em;',
'      outline: none;',
'      transition: border-color 0.2s ease;',
'    }',
'',
'    .chat-input input:focus {',
'      border-color: var(--primary-color);',
'    }',
'',
'    .chat-input button {',
'      background-color: var(--primary-color);',
'      color: white;',
'      border: none;',
'      padding: 10px 20px; /* More padding */',
'      margin-left: 10px;',
'      border-radius: 25px; /* Pill shape */',
'      cursor: pointer;',
'      font-size: 0.95em;',
'      transition: background-color 0.2s ease, transform 0.1s ease;',
'    }',
'',
'    .chat-input button:hover {',
'      background-color: #0056b3; /* Darker blue on hover */',
'      transform: translateY(-1px);',
'    }',
'',
'    .message {',
'      max-width: 85%; /* Slightly wider messages */',
'      padding: 12px 18px; /* More padding */',
'      border-radius: 18px; /* Softer rounded corners */',
'      animation: fadeIn 0.3s ease-out;',
'      font-size: 0.95em;',
'      line-height: 1.4;',
'    }',
'',
'    .bot {',
'      background-color: var(--bot-color);',
'      align-self: flex-start;',
'      border-bottom-left-radius: 4px; /* Slight difference for visual appeal */',
'      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);',
'    }',
'',
'    .user {',
'      background-color: var(--user-color);',
'      align-self: flex-end;',
'      border-bottom-right-radius: 4px; /* Slight difference for visual appeal */',
'      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);',
'    }',
'',
'    .quick-question {',
'      background-color: var(--quick-question-bg);',
'      border: 1px solid var(--quick-question-border);',
'      color: var(--secondary-color); /* Softer text color */',
'      align-self: flex-start;',
'      padding: 10px 15px;',
'      border-radius: 20px; /* More rounded */',
'      cursor: pointer;',
'      transition: all 0.25s ease-in-out;',
'      margin: 4px 0; /* Less margin for tighter grouping */',
'      font-size: 0.9em;',
'      line-height: 1.3;',
'      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05); /* Subtle shadow */',
'    }',
'',
'    .quick-question:hover {',
'      background-color: #e9ecef; /* Slightly darker on hover */',
'      transform: translateY(-2px) scale(1.01); /* Gentle lift and slight scale */',
'      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);',
'    }',
'    ',
'    .quick-question-category {',
'        font-weight: 600; /* Make categories a bit bolder */',
'        color: var(--primary-color); /* Color for categories */',
'    }',
'',
'    .quick-questions-container {',
'      display: flex;',
'      flex-direction: column;',
'      gap: 8px; /* Gap between quick questions */',
'      margin-top: 15px; /* More space above */',
'    }',
'',
'    /* Animations */',
'    @keyframes fadeIn {',
'      from {',
'        opacity: 0;',
'        transform: translateY(10px);',
'      }',
'      to {',
'        opacity: 1;',
'        transform: translateY(0);',
'      }',
'    }',
'',
'    @keyframes slideUpIn {',
'      from {',
'        opacity: 0;',
'        transform: translateY(50px);',
'      }',
'      to {',
'        opacity: 1;',
'        transform: translateY(0);',
'      }',
'    }',
'  </style>',
'</head>',
'<body>',
unistr('  <button class="chat-btn" onclick="toggleChat()" type="button">\D83D\DCAC</button>'),
'',
'  <div class="chat-window" id="chatWindow">',
'    <div class="chat-header">How can we help?</div>',
'    <div class="chat-body" id="chatBody">',
'      <div class="message bot">Hi there! I''m your support assistant. What can I help you with today?</div>',
'    </div>',
'    <div class="chat-input">',
'      <input type="text" id="userInput" placeholder="Ask a question or select an option..." onkeypress="handleKeyPress(event)" />',
'      <button onclick="sendMessage()">Send</button>',
'    </div>',
'  </div>',
'{else/}',
'  <!DOCTYPE html>',
'<html lang="en">',
'<head>',
'  <meta charset="UTF-8" />',
'  <meta name="viewport" content="width=device-width, initial-scale=1.0" />',
'  <title>Support Chatbot</title>',
'  <style>',
'    :root {',
'      --primary-color: #007bff; /* A more common, professional blue */',
'      --secondary-color: #6c757d; /* For subtle elements */',
'      --bot-color: #e9f5ff; /* Lighter blue for bot messages */',
'      --user-color: #d4edda; /* Gentle green for user messages */',
'      --quick-question-bg: #f8f9fa; /* Light background for quick questions */',
'      --quick-question-border: #dee2e6; /* Border for quick questions */',
'      --glass-bg: rgba(255, 255, 255, 0.8); /* Slightly less transparent glass */',
'      --glass-border: 1px solid rgba(200, 200, 200, 0.3); /* Subtle glass border */',
'      --glass-blur: blur(15px); /* Increased blur for more glass effect */',
'      --shadow-light: 0 4px 12px rgba(0, 0, 0, 0.1);',
'      --shadow-medium: 0 8px 25px rgba(0, 0, 0, 0.2);',
'    }',
'',
'    /* body {',
'      margin: 0;',
'      font-family: ''Inter'', ''Segoe UI'', Roboto, Helvetica, Arial, sans-serif; ',
'      background: linear-gradient(to right bottom, #e0f2f7, #f0f8ff); ',
'      min-height: 100vh;',
'      display: flex;',
'      justify-content: center;',
'      align-items: center;',
'    }  */',
'',
'    .chat-btn {',
'      position: fixed;',
'      bottom: 25px;',
'      right: 25px;',
'      background-color: var(--primary-color);',
'      color: white;',
'      border: none;',
'      border-radius: 50%;',
'      width: 65px;',
'      height: 65px;',
'      font-size: 32px; /* Slightly larger icon */',
'      cursor: pointer;',
'      box-shadow: var(--shadow-medium);',
'      transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;',
'      z-index: 1000;',
'      display: flex;',
'      justify-content: center;',
'      align-items: center;',
'    }',
'',
'    .chat-btn:hover {',
'      transform: translateY(-3px); /* Gentle lift */',
'      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25);',
'    }',
'',
'    .chat-window {',
'      position: fixed;',
'      bottom: 100px; /* Adjusted position above button */',
'      right: 25px;',
'      width: 380px; /* Slightly wider */',
'      max-height: 550px; /* Taller */',
'      background: var(--glass-bg);',
'      backdrop-filter: var(--glass-blur);',
'      border-radius: 20px; /* More rounded corners */',
'      box-shadow: var(--shadow-medium);',
'      border: var(--glass-border);',
'      display: none;',
'      flex-direction: column;',
'      overflow: hidden;',
'      z-index: 1000;',
'      animation: slideUpIn 0.3s ease-out forwards; /* Entry animation */',
'    }',
'',
'    .chat-header {',
'      background-color: var(--primary-color);',
'      color: white;',
'      padding: 18px; /* More padding */',
'      text-align: center;',
'      font-weight: 600; /* Bolder */',
'      font-size: 1.1em;',
'      border-top-left-radius: 20px;',
'      border-top-right-radius: 20px;',
'    }',
'',
'    .chat-body {',
'      flex-grow: 1;',
'      padding: 15px; /* More padding */',
'      overflow-y: auto;',
'      display: flex;',
'      flex-direction: column;',
'      gap: 12px; /* More space between messages */',
'      scroll-behavior: smooth; /* Smooth scrolling */',
'    }',
'',
'    .chat-input {',
'      display: flex;',
'      padding: 15px;',
'      border-top: 1px solid #e0e0e0; /* Lighter border */',
'      background-color: rgba(255, 255, 255, 0.9); /* Slight background for input area */',
'    }',
'',
'    .chat-input input {',
'      flex: 1;',
'      padding: 12px 15px; /* More padding */',
'      border-radius: 25px; /* Pill shape */',
'      border: 1px solid #ccc;',
'      font-size: 0.95em;',
'      outline: none;',
'      transition: border-color 0.2s ease;',
'    }',
'',
'    .chat-input input:focus {',
'      border-color: var(--primary-color);',
'    }',
'',
'    .chat-input button {',
'      background-color: var(--primary-color);',
'      color: white;',
'      border: none;',
'      padding: 10px 20px; /* More padding */',
'      margin-left: 10px;',
'      border-radius: 25px; /* Pill shape */',
'      cursor: pointer;',
'      font-size: 0.95em;',
'      transition: background-color 0.2s ease, transform 0.1s ease;',
'    }',
'',
'    .chat-input button:hover {',
'      background-color: #0056b3; /* Darker blue on hover */',
'      transform: translateY(-1px);',
'    }',
'',
'    .message {',
'      max-width: 85%; /* Slightly wider messages */',
'      padding: 12px 18px; /* More padding */',
'      border-radius: 18px; /* Softer rounded corners */',
'      animation: fadeIn 0.3s ease-out;',
'      font-size: 0.95em;',
'      line-height: 1.4;',
'    }',
'',
'    .bot {',
'      background-color: var(--bot-color);',
'      align-self: flex-start;',
'      border-bottom-left-radius: 4px; /* Slight difference for visual appeal */',
'      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);',
'    }',
'',
'    .user {',
'      background-color: var(--user-color);',
'      align-self: flex-end;',
'      border-bottom-right-radius: 4px; /* Slight difference for visual appeal */',
'      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);',
'    }',
'',
'    .quick-question {',
'      background-color: var(--quick-question-bg);',
'      border: 1px solid var(--quick-question-border);',
'      color: var(--secondary-color); /* Softer text color */',
'      align-self: flex-start;',
'      padding: 10px 15px;',
'      border-radius: 20px; /* More rounded */',
'      cursor: pointer;',
'      transition: all 0.25s ease-in-out;',
'      margin: 4px 0; /* Less margin for tighter grouping */',
'      font-size: 0.9em;',
'      line-height: 1.3;',
'      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05); /* Subtle shadow */',
'    }',
'',
'    .quick-question:hover {',
'      background-color: #e9ecef; /* Slightly darker on hover */',
'      transform: translateY(-2px) scale(1.01); /* Gentle lift and slight scale */',
'      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);',
'    }',
'    ',
'    .quick-question-category {',
'        font-weight: 600; /* Make categories a bit bolder */',
'        color: var(--primary-color); /* Color for categories */',
'    }',
'',
'    .quick-questions-container {',
'      display: flex;',
'      flex-direction: column;',
'      gap: 8px; /* Gap between quick questions */',
'      margin-top: 15px; /* More space above */',
'    }',
'',
'    /* Animations */',
'    @keyframes fadeIn {',
'      from {',
'        opacity: 0;',
'        transform: translateY(10px);',
'      }',
'      to {',
'        opacity: 1;',
'        transform: translateY(0);',
'      }',
'    }',
'',
'    @keyframes slideUpIn {',
'      from {',
'        opacity: 0;',
'        transform: translateY(50px);',
'      }',
'      to {',
'        opacity: 1;',
'        transform: translateY(0);',
'      }',
'    }',
'  </style>',
'</head>',
'<body>',
unistr('  <button class="chat-btn" onclick="toggleChat()" type="button">\D83D\DCAC</button>'),
'',
'  <div class="chat-window" id="chatWindow">',
'    <div class="chat-header">How can we help?</div>',
'    <div class="chat-body" id="chatBody">',
'      <div class="message bot">Hi there! I''m your support assistant. What can I help you with today?</div>',
'    </div>',
'    <div class="chat-input">',
'      <input type="text" id="userInput" placeholder="Ask a question or select an option..." onkeypress="handleKeyPress(event)" />',
'      <button onclick="sendMessage()">Send</button>',
'    </div>',
'  </div>',
'',
'<script>',
'    document.addEventListener(''DOMContentLoaded'', function () {',
'      const chatWindow = document.getElementById("chatWindow");',
'      const chatBody = document.getElementById("chatBody");',
'      const userInput = document.getElementById("userInput");',
'',
'      // Function to display messages',
'      function addMessage(message, sender, isHTML = false) {',
'        const msgDiv = document.createElement("div");',
'        msgDiv.className = `message ${sender}`;',
'        ',
'        if (isHTML) {',
'          msgDiv.innerHTML = message;',
'        } else {',
'          msgDiv.textContent = message;',
'        }',
'        ',
'        chatBody.appendChild(msgDiv);',
'        chatBody.scrollTop = chatBody.scrollHeight;',
'      }',
'',
'      // Function to clear existing quick questions',
'      function clearQuickQuestions() {',
'        const existingContainer = chatBody.querySelector(".quick-questions-container");',
'        if (existingContainer) {',
'          existingContainer.remove();',
'        }',
'      }',
'',
'      // Function to show answer with integrated action options',
'      function showAnswerWithOptions(answer, subQuestionId) {',
'        const answerWithOptions = `',
'          <div class="answer-content">${answer}</div>',
'          <div class="answer-options">',
'            <div class="option-prompt">Would you like to:</div>',
'            <div class="option-list">',
'              <span class="option-separator">or</span>',
'              <a href="#" class="option-link" onclick="returnToMainTopics(); return false;">',
'                <br><i class="fa fa-arrow-left"></i> Return to main topics',
'              </a>',
'            </div>',
'          </div>',
'        `;',
'        ',
'        addMessage(answerWithOptions, ''bot'', true);',
'      }',
'',
'      // Global function for returning to main topics',
'      window.returnToMainTopics = function() {',
'        addMessage("Return to main topics", ''user'');',
'        clearQuickQuestions();',
'        setTimeout(showQuickQuestionCategories, 300);',
'      };',
'',
'      // Show quick question categories',
'      function showQuickQuestionCategories() {',
'        clearQuickQuestions();',
'        const container = document.createElement("div");',
'        container.className = "quick-questions-container";',
'',
'        const promptDiv = document.createElement("div");',
'        promptDiv.className = "message bot";',
'        promptDiv.textContent = "Please select a topic category to explore:";',
'        chatBody.appendChild(promptDiv);',
'',
'        apex.server.process(''fetch_main_question'', {',
'            x01: ''fetch''',
'        }, {',
'            success: function (data) {',
'              if (Array.isArray(data)) {',
'                data.forEach(category => {',
'                  const categoryBtn = document.createElement("div");',
'                  categoryBtn.className = "quick-question quick-question-category";',
'                  categoryBtn.textContent = category.name;',
'                  categoryBtn.dataset.id = category.id;',
'                  categoryBtn.onclick = () => {',
'                    apex.item("P41_MAIN_QUESTION_ID").setValue(category.id);',
'                    showSubQuestions(category.id, category.name);',
'                  };',
'                  container.appendChild(categoryBtn);',
'                });',
'              } else {',
'                const errorMsg = document.createElement("div");',
'                errorMsg.className = "message bot";',
'                errorMsg.textContent = "Unable to load topics at this time. Please try again later.";',
'                container.appendChild(errorMsg);',
'              }',
'            },',
'            error: function () {',
'              const errorMsg = document.createElement("div");',
'              errorMsg.className = "message bot";',
'              errorMsg.textContent = "Error connecting to the knowledge base. Please check your connection.";',
'              container.appendChild(errorMsg);',
'            }',
'        });',
'',
'        chatBody.appendChild(container);',
'        chatBody.scrollTop = chatBody.scrollHeight;',
'      }',
'',
'      // Show sub-questions for a category',
'      function showSubQuestions(categoryId, categoryName) {',
'        clearQuickQuestions();',
'        const container = document.createElement("div");',
'        container.className = "quick-questions-container";',
'',
'        addMessage(`Topic: ${categoryName}. Please select your specific question:`, ''bot'');',
'',
'        const backBtn = document.createElement("div");',
'        backBtn.className = "quick-question";',
unistr('        backBtn.textContent = "\2190 Return to Topic Categories";'),
'        backBtn.onclick = () => {',
'          clearQuickQuestions();',
'          showQuickQuestionCategories();',
'        };',
'        container.appendChild(backBtn);',
'',
'        apex.server.process(''fetch_sub_question'', {',
'          x01: categoryId',
'        }, {',
'          success: function (data) {',
'            if (Array.isArray(data)) {',
'              data.forEach(sub => {',
'                const subBtn = document.createElement("div");',
'                subBtn.className = "quick-question";',
'                subBtn.textContent = sub.question;',
'                subBtn.dataset.id = sub.id;',
'                subBtn.onclick = () => {',
'                  addMessage(sub.question, ''user'');',
'                  clearQuickQuestions();',
'                  apex.item("SUB_QUESTION_ID").setValue(sub.id);',
'',
'                  apex.server.process(''fetch_answer'', {',
'                    x01: sub.id',
'                  }, {',
'                    success: function (pData) {',
'                      let answerText = typeof pData === ''object'' ? pData.value || pData.answer : pData;',
'                      ',
'                      if (!answerText) {',
'                        answerText = "Our knowledge base doesn''t currently have an answer for this specific question. Our support team has been notified to address this gap.";',
'                      }',
'                      ',
'                      setTimeout(() => {',
'                        showAnswerWithOptions(answerText, sub.id);',
'                      }, 700);',
'                    },',
'                    error: function () {',
'                      setTimeout(() => {',
'                        const errorAnswer = `',
'                          <div class="answer-content">We''re experiencing technical difficulties retrieving this information. Our team has been alerted.</div>',
'                          <div class="answer-options">',
'                            <div class="option-list">',
'                            <br>',
'                              <a href="#" class="option-link" onclick="returnToMainTopics(); return false;">',
'                                <i class="fa fa-arrow-left"></i> Return to main topics',
'                              </a>',
'                            </div>',
'                          </div>',
'                        `;',
'                        addMessage(errorAnswer, ''bot'', true);',
'                      }, 700);',
'                    },',
'                    dataType: "text"',
'                  });',
'                };',
'                container.appendChild(subBtn);',
'              });',
'            } else {',
'              const err = document.createElement("div");',
'              err.className = "message bot";',
'              err.textContent = "No specific questions available for this topic.";',
'              container.appendChild(err);',
'            }',
'            chatBody.appendChild(container);',
'            chatBody.scrollTop = chatBody.scrollHeight;',
'          },',
'          error: function () {',
'            const err = document.createElement("div");',
'            err.className = "message bot";',
'            err.textContent = "Error loading questions. Please try again.";',
'            container.appendChild(err);',
'            chatBody.appendChild(container);',
'            chatBody.scrollTop = chatBody.scrollHeight;',
'          }',
'        });',
'      }',
'',
'      // Toggle chat window visibility',
'      window.toggleChat = function () {',
'        if (chatWindow.style.display === "flex") {',
'          chatWindow.style.display = "none";',
'        } else {',
'          chatWindow.style.display = "flex";',
'          if (!chatBody.querySelector(".quick-questions-container")) {',
'            setTimeout(showQuickQuestionCategories, 500);',
'          }',
'        }',
'      };',
'',
'      // Send user message',
'      window.sendMessage = function () {',
'        const msg = userInput.value.trim();',
'        if (!msg) return;',
'',
'        addMessage(msg, ''user'');',
'        userInput.value = "";',
'        clearQuickQuestions();',
'',
'        let responseFound = false;',
'        let botResponse = "I couldn''t find an exact match for your query. You may want to:";',
'        ',
'        // Search knowledge base',
'        for (const category in knowledgeBase) {',
'          for (const question in knowledgeBase[category]) {',
'            if (msg.toLowerCase() === question.toLowerCase()) {',
'              botResponse = knowledgeBase[category][question];',
'              responseFound = true;',
'              break;',
'            }',
'          }',
'          if (responseFound) break;',
'        }',
'',
'        setTimeout(() => {',
'          if (responseFound) {',
'            const answerWithOptions = `',
'              <div class="answer-content">${botResponse}</div>',
'              <div class="answer-options">',
'                <div class="option-prompt">For more information:</div>',
'                <div class="option-list">',
'                  <span class="option-separator">or</span>',
'                  <a href="#" class="option-link" onclick="showQuickQuestionCategories(); return false;">',
'                  <br>',
'                    <i class="fa fa-search"></i> Explore related topics',
'                  </a>',
'                </div>',
'              </div>',
'            `;',
'            addMessage(answerWithOptions, ''bot'', true);',
'          } else {',
'            addMessage(botResponse, ''bot'');',
'            setTimeout(showQuickQuestionCategories, 1500);',
'          }',
'        }, 700);',
'      };',
'',
'      // Handle Enter key press',
'      window.handleKeyPress = function (e) {',
'        if (e.key === "Enter") {',
'          sendMessage();',
'        }',
'      };',
'',
'      // Initialize chat',
'      if (chatWindow.style.display === "flex") {',
'        setTimeout(showQuickQuestionCategories, 500);',
'      }',
'    });',
'</script>',
'',
'</body>',
'</html>',
'{endif/}'))
,p_default_escape_mode=>'HTML'
,p_translate_this_template=>false
,p_api_version=>1
,p_standard_attributes=>'REGION_TEMPLATE'
,p_substitute_attributes=>true
,p_version_scn=>39537947419596
,p_subscribe_plugin_settings=>true
,p_version_identifier=>'1.0'
);
end;
/
prompt --application/end_environment
begin
wwv_flow_imp.import_end(p_auto_install_sup_obj => nvl(wwv_flow_application_install.get_auto_install_sup_obj, false)
);
commit;
end;
/
set verify on feedback on define on
prompt  ...done
